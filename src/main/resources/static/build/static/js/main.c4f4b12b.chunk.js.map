{"version":3,"sources":["components/Button.js","components/OptionsPanel.js","components/Tile.js","utils/arrayUtils.js","components/Board.js","components/Game.js","services/minesweeperService.js","components/ResultList.js","components/SidePanel.js","components/Timer.js","components/GameInfoBar.js","components/StatusPanel.js","App.js","index.js"],"names":["Button","text","onClick","className","type","value","OptionsPanel","handleCreateGame","Nav","Item","Tile","tile","open","toggleFlag","setColor","closedStyle","color","openStyle","backgroundColor","handleFlag","event","preventDefault","isOpen","isFlagged","onContextMenu","e","style","isMine","initializeArray","rows","cols","Array","from","length","initialTile","initializeMines","mines","board","minesLeft","row","generateIndex","col","updateAdjacentMinesCount","index","Math","floor","random","i","j","notFloor","notMine","notCeiling","exception","console","log","tileIsEmpty","indexOutOfRange","isEmptyArray","array","isClosedNonMinedTile","Board","isOver","setGameOver","updateBoard","openTile","endGame","newBoard","cascadeEmptyTiles","gridStyle","display","gridTemplateColumns","gridTemplateRows","alignItems","textAlign","justifyItems","justifyContent","map","key","Game","game","setGame","handleIsWon","handleUpdateBoard","isOn","a","filter","isWon","Row","Col","b","findAll","axios","get","res","data","create","result","post","ResultList","listItems","title","useState","visible","setVisible","itemsToShow","sort","time","slice","Card","Header","Title","Body","ListGroup","variant","item","id","nickname","action","SidePanel","results","r","difficulty","Timer","setTime","useEffect","timer","setInterval","clearInterval","GameInfoBar","handleNicknameChange","xs","sm","FormControl","placeholder","onChange","StatusPanel","minHeight","width","App","setNickname","setResults","handleFindResults","service","newGame","createBoardOf","savedResult","concat","handleSetGame","handleSetTime","Container","fluid","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4f4b12b.chunk.js","sourcesContent":["import React from 'react'\n\nconst Button = ({ text, onClick }) => {\n  return (\n    <input\n      className='button m-1'\n      type='button'\n      value={text}\n      onClick={onClick}\n    />\n  )\n}\n\nexport default Button","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport Button from './Button'\n\nconst OptionsPanel = ({ handleCreateGame }) =>\n  <Nav className='justify-content-center'>\n    <Nav.Item>\n      <Button\n        text='Easy 9x9'\n        onClick={() => handleCreateGame(9, 9, 10, 'easy')}\n      />\n    </Nav.Item>\n    <Nav.Item>\n      <Button\n        text='Medium 16x16'\n        onClick={() => handleCreateGame(16, 16, 40, 'medium')}\n      />\n    </Nav.Item>\n    <Nav.Item>\n      <Button\n        text='Hard 16x30'\n        onClick={() => handleCreateGame(16, 30, 99, 'hard')}\n      />\n    </Nav.Item>\n  </Nav>\n\nexport default OptionsPanel","import React from 'react'\nimport { FaFlag, FaBomb } from 'react-icons/fa'\n\nconst Tile = ({ tile, open, toggleFlag }) => {\n\n  const setColor = () => {\n    switch(tile.value) {\n    case 0:\n      return 'whitesmoke'\n    case 1:\n      return 'green'\n    case 2:\n      return 'orange'\n    case 3:\n      return 'red'\n    case 4:\n      return 'purple'\n    default:\n      return 'black'\n    }\n  }\n\n  const closedStyle = {\n    color: setColor()\n  }\n\n  const openStyle = {\n    backgroundColor: 'whitesmoke',\n    color: setColor()\n  }\n\n  const handleOpen = (event) => {\n    open()\n  }\n\n  const handleFlag = (event) => {\n    event.preventDefault()\n\n    if (!tile.isOpen) {\n      toggleFlag()\n    }\n  }\n\n  if (tile.isFlagged) {\n    return (\n      <div\n        className='tile'\n        onContextMenu={(e) => handleFlag(e)}\n      >\n        <FaFlag style={{ color: 'red', backgroundColor: 'grey' }} />\n      </div>\n    )\n  }\n\n  if (tile.isOpen && tile.isMine) {\n    return (\n      <FaBomb />\n    )\n  }\n\n  return (\n    <div\n      className='gridItem'\n      style={tile.isOpen ? openStyle : closedStyle}\n      onClick={handleOpen}\n      onContextMenu={(e) => handleFlag(e)}\n    >\n      {tile.isOpen && tile.value !== 0\n        ? tile.value\n        : ''\n      }\n    </div>\n  )\n}\n\nexport default Tile","\nexport const createBoardOf = (rows, cols, mines) => {\n  const newBoard = initializeArray(rows, cols)\n  initializeMines(rows, cols, mines, newBoard)\n  return newBoard\n}\n\nconst initializeArray = (rows, cols) =>\n  Array.from({ length: rows },\n    () => Array.from({ length: cols },\n      () =>  initialTile() ))\n\nconst initialTile = () => {\n  return {\n    value: 0,\n    isOpen: false,\n    isFlagged: false,\n    isMine: false\n  }\n}\n\nconst initializeMines = (rows, cols, mines, board) => {\n  let minesLeft = mines\n\n  while (minesLeft > 0) {\n    let row = generateIndex(rows)\n    let col = generateIndex(cols)\n\n    if (!board[row][col].isMine) {\n      board[row][col].isMine = true\n      updateAdjacentMinesCount(row, col, board)\n      minesLeft -= 1\n    }\n  }\n}\n\nconst generateIndex = index => Math.floor(Math.random() * index)\n\nconst updateAdjacentMinesCount = (i, j, board) => {\n  try {\n    if (notFloor(i) && notFloor(j) && notMine(i - 1, j - 1, board)) {\n      board[i - 1][j - 1].value += 1\n    }\n    if (notCeiling(i, board) && j < board[0].length-1 && notMine(i + 1, j + 1, board)) {\n      board[i + 1][j + 1].value += 1\n    }\n    if (notFloor(i) && j < board[0].length-1 && notMine(i - 1, j + 1, board)) {\n      board[i - 1][j + 1].value += 1\n    }\n    if (notCeiling(i, board) && notFloor(j) && notMine(i + 1, j - 1, board)) {\n      board[i + 1][j - 1].value += 1\n    }\n\n    if (notFloor(i) && notMine(i - 1, j, board)) {\n      board[i - 1][j].value += 1\n    }\n    if (notCeiling(i, board) && notMine(i + 1, j, board)) {\n      board[i + 1][j].value += 1\n    }\n    if (j < board[0].length-1 && notMine(i, j + 1, board)) {\n      board[i][j + 1].value += 1\n    }\n    if (notFloor(j) && notMine(i, j - 1, board)) {\n      board[i][j - 1].value += 1\n    }\n\n  } catch (exception) {\n    console.log(exception)\n  }\n}\n\nconst notFloor = index => index > 0\nconst notCeiling = (index, board) => index < board.length-1\nconst notMine = (row, col, board) => !board[row][col].isMine\n\nexport const cascadeEmptyTiles = (row, col, board) => {\n  if (indexOutOfRange(row, col, board) || board[row][col].isOpen) {\n    return\n  }\n\n  board[row][col].isOpen = true\n\n  if (tileIsEmpty(row, col, board)) {\n    cascadeEmptyTiles(row - 1, col - 1, board)\n    cascadeEmptyTiles(row + 1, col + 1, board)\n    cascadeEmptyTiles(row - 1, col + 1, board)\n    cascadeEmptyTiles(row + 1, col - 1, board)\n\n    cascadeEmptyTiles(row, col - 1, board)\n    cascadeEmptyTiles(row - 1, col, board)\n    cascadeEmptyTiles(row, col + 1, board)\n    cascadeEmptyTiles(row + 1, col, board)\n  }\n}\n\nconst tileIsEmpty = (row, col, board) =>\n  board[row][col].value === 0 &&\n      board[row][col].isMine === false\n\nconst indexOutOfRange = (row, col, board) =>\n  row < 0 || col < 0 || row > board.length-1 || col > board[0].length-1\n\n\nexport const isWon = game => {\n  const a = game.board.filter(row => !isEmptyArray(\n    row.filter(isClosedNonMinedTile))\n  )\n\n  return isEmptyArray(a)\n}\n\nconst isEmptyArray = array => array.length === 0\nconst isClosedNonMinedTile = tile => !tile.isOpen && !tile.isMine\n","import React from 'react'\nimport Tile from './Tile'\nimport { cascadeEmptyTiles } from '../utils/arrayUtils'\n\nconst Board = ({ board, isOver, setGameOver, updateBoard }) => {\n  if (!board) {\n    return null\n  }\n\n  const openTile = (row, col) => {\n    if (!isOver) {\n      if (isMine(row, col, board)) {\n        endGame(row, col)\n        return\n      }\n\n      const newBoard = [...board]\n      cascadeEmptyTiles(row, col, newBoard)\n      updateBoard(newBoard)\n    }\n  }\n\n  const isMine = (row, col, board) => board[row][col].isMine\n\n  const endGame = (row, col) => {\n    board[row][col].isOpen = true\n    setGameOver()\n  }\n\n  const toggleFlag = (row, col) => {\n    if (!isOver) {\n      const newBoard = [...board]\n      newBoard[row][col].isFlagged = !newBoard[row][col].isFlagged\n      updateBoard(newBoard)\n    }\n  }\n\n  const gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: `repeat(${board[0].length}, 1.5rem)`,\n    gridTemplateRows: `repeat(${board.length}, 1.5rem)`,\n    alignItems: 'center',\n    textAlign: 'center',\n    justifyItems: 'center',\n    justifyContent: 'center'\n  }\n\n  return (\n    <div style={gridStyle} >\n      {board.map((row, i) =>\n        row.map((col, j) =>\n          <Tile\n            key={j}\n            tile={col}\n            open={() => openTile(i, j)}\n            toggleFlag={() => toggleFlag(i, j)}\n          />\n        )\n      )}\n    </div>\n  )\n}\n\nexport default Board","import React from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport Board from './Board'\nimport { isWon } from '../utils/arrayUtils'\n\nconst Game = ({ game, setGame, handleIsWon }) => {\n  if (!game) {\n    return null\n  }\n\n  const handleSetGameOver = () => {\n    setGame({ ...game, isOver: true, isOn: false })\n  }\n\n  const handleUpdateBoard = board => {\n    setGame({ ...game, board, isOn: true })\n\n    if (isWon(game)) {\n      handleIsWon()\n    }\n  }\n\n  return (\n    <Row>\n      <Col>\n        <Board\n          board={game.board}\n          setGameOver={handleSetGameOver}\n          updateBoard={(b) => handleUpdateBoard(b)}\n          isOver={game.isOver}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Game","import axios from 'axios'\n\nconst basePath = '/results'\n\nconst findAll = async () => {\n  const res = await axios.get(`${basePath}`)\n  return res.data\n}\n\nconst create = async result => {\n  const res = await axios.post(`${basePath}`, result)\n  return res.data\n}\n\nexport default {\n  findAll,\n  create\n}","import React, { useState } from 'react'\nimport { ListGroup, Card } from 'react-bootstrap'\n\nconst ResultList = ({ listItems, title }) => {\n  const [visible, setVisible] = useState(5)\n\n  const handleSetVisible = () => setVisible(visible + 5)\n\n  const byTime = (a, b) => a.time - b.time > 0 ? 1 : -1\n  const itemsToShow = listItems.sort(byTime).slice(0, visible)\n\n  return (\n    <Card className='mb-2 mt-2'>\n      <Card.Header>\n        <Card.Title>\n          {title}\n        </Card.Title>\n      </Card.Header>\n      <Card.Body>\n        <ListGroup variant='flush'>\n          {itemsToShow.map(item =>\n            <ListGroup.Item key={item.id}>\n              {item.nickname} {item.time}\n            </ListGroup.Item>\n          )}\n\n          {visible < listItems.length &&\n          <ListGroup.Item action onClick={handleSetVisible}>\n            Show more\n          </ListGroup.Item>\n          }\n        </ListGroup>\n      </Card.Body>\n    </Card>\n  )\n}\n\n\nexport default ResultList","import React from 'react'\nimport ResultList from './ResultList'\n\nconst SidePanel = ({ results }) => {\n\n  return (\n    <>\n      <h3>\n        Best Results\n      </h3>\n\n      <ResultList\n        title='Easy'\n        listItems={results.filter(r => r.difficulty === 'easy')}\n      />\n\n      <ResultList\n        title='Medium'\n        listItems={results.filter(r => r.difficulty === 'medium')}\n      />\n\n      <ResultList\n        title='Hard'\n        listItems={results.filter(r => r.difficulty === 'hard')}\n      />\n    </>\n  )\n}\n\nexport default SidePanel","import React, { useEffect } from 'react'\n\nconst Timer = ({ time, setTime }) => {\n\n  useEffect(() => {\n    const timer = setInterval(() => setTime(time + 1), 1000)\n    return () => clearInterval(timer)\n  }, [time])\n\n  return (\n    <>{time}</>\n  )\n}\n\nexport default Timer\n","import React from 'react'\nimport { Row, Col, FormControl } from 'react-bootstrap'\nimport Timer from './Timer'\n\nconst GameInfoBar = ({ game, handleNicknameChange, time, setTime }) => {\n\n  const handleShowTimer = () => game && game.isOn\n    ?\n    <Timer\n      time={time}\n      setTime={setTime}\n    />\n    : time\n\n  return (\n    <Row className='justify-content-center mt-3'>\n      <Col xs={12} sm={4} >\n        <FormControl\n          className='mb-2 mt-2'\n          placeholder='Your nickname'\n          onChange={handleNicknameChange}\n        />\n\n        <p className='float-left'>Mines: {game ? game.mines : 0}</p>\n        <p className='float-right'>Seconds: {handleShowTimer()}</p>\n\n      </Col>\n    </Row>\n  )\n}\n\nexport default GameInfoBar\n","import React from 'react'\nimport { Row, Col } from 'react-bootstrap'\n\nconst StatusPanel = ({ game }) => {\n  if (!game) {\n    return null\n  }\n\n  const style = {\n    minHeight: '35px',\n    width: '100%',\n    color: game.isWon ? 'green' : 'red'\n  }\n\n  return (\n    <Row style={style}>\n      <Col>\n        {game.isOver &&\n          <h3>You lost!</h3>\n        }\n        {game.isWon &&\n          <h3>You Won!</h3>\n        }\n      </Col>\n    </Row>\n  )\n}\n\nexport default StatusPanel","import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport OptionsPanel from './components/OptionsPanel'\nimport Game from './components/Game'\nimport { createBoardOf } from './utils/arrayUtils'\nimport service from './services/minesweeperService'\nimport './App.css'\nimport SidePanel from './components/SidePanel'\nimport GameInfoBar from './components/GameInfoBar'\nimport StatusPanel from './components/StatusPanel'\n\nconst App = () => {\n  const [game, setGame] = useState(null)\n  const [nickname, setNickname] = useState('')\n  const [time, setTime] = useState(0)\n  const [results, setResults] = useState([])\n\n  useEffect(() => {\n    handleFindResults()\n  }, [])\n\n  const handleFindResults = async () => {\n    try {\n      const res = await service.findAll()\n      setResults(res)\n    } catch (exception) {\n      console.log('Ooops!')\n    }\n  }\n\n  const handleCreateGame = (rows, cols, mines, difficulty) => {\n    const board = createBoardOf(rows, cols, mines)\n\n    const newGame = {\n      board,\n      mines,\n      difficulty,\n      isOver: false,\n      isWon: false,\n      isOn: false\n    }\n\n    setTime(0)\n    setGame(newGame)\n  }\n\n  const handleIsWon = async () => {\n    try {\n      setGame({ ...game, isWon: true, isOn: false })\n\n      const result = {\n        nickname: nickname === '' ? 'Anonymous' : nickname,\n        difficulty: game.difficulty,\n        time\n      }\n\n      const savedResult = await service.create(result)\n      setResults(results.concat(savedResult))\n\n    } catch (exception) {\n      console.log('Oops!')\n    }\n  }\n\n  const handleSetGame = game => setGame(game)\n  const handleSetTime = time => setTime(time)\n  const handleNicknameChange = event => setNickname(event.target.value)\n\n  return (\n    <Container fluid className='text-center'>\n      <Row className='banner'>\n        <Col>\n          <h1>Mine Sweeper</h1>\n          <p>Swipe this to right</p>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={12} sm={3} >\n          <SidePanel\n            results={results}\n          />\n        </Col>\n        <Col xs={12} sm={9} >\n          <OptionsPanel\n            handleCreateGame={(rows, cols, mines, difficulty) =>\n              handleCreateGame(rows, cols, mines, difficulty)\n            }\n          />\n          <GameInfoBar\n            game={game}\n            time={time}\n            setTime={(time) => handleSetTime(time)}\n            handleNicknameChange={handleNicknameChange}\n          />\n          <StatusPanel\n            game={game}\n          />\n          <Game\n            game={game}\n            setGame={(game) => handleSetGame(game)}\n            handleIsWon={handleIsWon}\n          />\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}