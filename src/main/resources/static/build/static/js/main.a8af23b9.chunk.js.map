{"version":3,"sources":["components/Button.js","components/OptionsPanel.js","components/ClosedTile.js","utils/minesweeperUtils.js","components/Number.js","components/OpenTile.js","components/Board.js","components/Game.js","services/minesweeperService.js","components/ResultList.js","components/SidePanel.js","components/Timer.js","components/GameInfoBar.js","components/Notification.js","App.js","index.js"],"names":["Button","text","onClick","className","type","value","OptionsPanel","handleCreateGame","Nav","Item","ClosedTile","tile","open","toggleFlag","handleFlag","event","preventDefault","isFlagged","onContextMenu","style","color","backgroundColor","initializeArray","rows","cols","Array","from","length","initialTile","isOpen","isMine","initializeMines","mines","board","minesLeft","row","generateIndex","col","updateAdjacentMinesCount","index","Math","floor","random","i","j","incrementValueIfNotOutOfBounds","indexOutOfRange","openTileAndIsMine","isFlag","boardReducer","sum","currentRow","filter","isClosedNonMinedTile","isEmpty","Number","handleClick","setColor","OpenTile","openAdjacentTiles","Board","isOver","setGameOver","updateBoard","openTile","cascadeEmptyTiles","flags","notEnoughFlags","openAdjacentTilesAndIsMine","gridStyle","display","gridTemplateColumns","gridTemplateRows","alignItems","textAlign","justifyItems","justifyContent","map","key","Game","game","setGame","handleIsWon","handleShowNotification","handleUpdateBoard","isOn","reduce","isWon","Row","Col","b","findAll","a","axios","get","res","data","create","result","post","ResultList","listItems","title","useState","visible","setVisible","itemsToShow","sort","time","slice","Card","Header","Title","Body","ListGroup","variant","item","id","nickname","Badge","action","SidePanel","results","r","difficulty","Timer","setTime","useEffect","timer","setInterval","clearInterval","GameInfoBar","handleNicknameChange","xs","sm","FormControl","placeholder","onChange","Notification","notification","message","isError","App","setNotification","setNickname","setResults","handleFindResults","setTimeout","service","console","log","newGame","newBoard","createBoardOf","saveResult","savedResult","concat","handleSetGame","handleSetTime","Container","fluid","target","bestTime","min","ReactDOM","render","document","getElementById"],"mappings":"2SAaeA,EAXA,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACtB,OACE,2BACEC,UAAU,aACVC,KAAK,SACLC,MAAOJ,EACPC,QAASA,KCkBAI,EAtBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,iBAAH,OACnB,kBAACC,EAAA,EAAD,CAAKL,UAAU,0BACb,kBAACK,EAAA,EAAIC,KAAL,KACE,kBAAC,EAAD,CACER,KAAK,WACLC,QAAS,kBAAMK,EAAiB,EAAG,EAAG,GAAI,YAG9C,kBAACC,EAAA,EAAIC,KAAL,KACE,kBAAC,EAAD,CACER,KAAK,eACLC,QAAS,kBAAMK,EAAiB,GAAI,GAAI,GAAI,cAGhD,kBAACC,EAAA,EAAIC,KAAL,KACE,kBAAC,EAAD,CACER,KAAK,aACLC,QAAS,kBAAMK,EAAiB,GAAI,GAAI,GAAI,c,QCSrCG,EA3BI,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAE1BC,EAAa,SAACC,GAClBA,EAAMC,iBACNH,KAGF,OAAIF,EAAKM,UAEL,kBAAC,IAAD,CACEd,UAAU,WACVe,cAAeJ,EACfK,MAAO,CAAEC,MAAO,MAAOC,gBAAiB,UAM5C,yBACElB,UAAU,WACVD,QAASU,EACTM,cAAeJ,KCjBfQ,EAAkB,SAACC,EAAMC,GAAP,OACtBC,MAAMC,KAAK,CAAEC,OAAQJ,IACnB,kBAAME,MAAMC,KAAK,CAAEC,OAAQH,IACzB,kBAAOI,WAEPA,EAAc,WAClB,MAAO,CACLvB,MAAO,EACPwB,QAAQ,EACRZ,WAAW,EACXa,QAAQ,IAINC,EAAkB,SAACR,EAAMC,EAAMQ,EAAOC,GAG1C,IAFA,IAAIC,EAAYF,EAETE,EAAY,GAAG,CACpB,IAAIC,EAAMC,EAAcb,GACpBc,EAAMD,EAAcZ,GAEnBM,EAAOK,EAAKE,EAAKJ,KACpBA,EAAME,GAAKE,GAAKP,QAAS,EACzBQ,EAAyBH,EAAKE,EAAKJ,GACnCC,GAAa,KAKbE,EAAgB,SAAAG,GAAK,OAAIC,KAAKC,MAAMD,KAAKE,SAAWH,IAEpDD,EAA2B,SAACK,EAAGC,EAAGX,GACtCY,EAA+BF,EAAI,EAAGC,EAAI,EAAGX,GAC7CY,EAA+BF,EAAI,EAAGC,EAAI,EAAGX,GAC7CY,EAA+BF,EAAI,EAAGC,EAAI,EAAGX,GAC7CY,EAA+BF,EAAI,EAAGC,EAAI,EAAGX,GAE7CY,EAA+BF,EAAI,EAAGC,EAAGX,GACzCY,EAA+BF,EAAI,EAAGC,EAAGX,GACzCY,EAA+BF,EAAGC,EAAI,EAAGX,GACzCY,EAA+BF,EAAGC,EAAI,EAAGX,IAGrCY,EAAiC,SAACV,EAAKE,EAAKJ,GAC3Ca,EAAgBX,EAAKE,EAAKJ,KAC7BA,EAAME,GAAKE,GAAKhC,OAAS,IAsDvB0C,EAAoB,SAACZ,EAAKE,EAAKJ,GACnC,QAAKa,EAAgBX,EAAKE,EAAKJ,IAAWe,EAAOb,EAAKE,EAAKJ,KAEzDA,EAAME,GAAKE,GAAKR,QAAS,GAErBC,EAAOK,EAAKE,EAAKJ,MAOZa,EAAkB,SAACX,EAAKE,EAAKJ,GAAX,OAC7BE,EAAM,GAAKE,EAAM,GAAKF,EAAMF,EAAMN,OAAO,GAAKU,EAAMJ,EAAM,GAAGN,OAAO,GAMhEsB,EAAe,SAACC,EAAKC,GAAN,OAAqBD,EAAMC,EAAWC,OAAOC,GAAsB1B,QAElF0B,EAAuB,SAAA1C,GAAI,OAAKA,EAAKkB,SAAWlB,EAAKmB,QAErDwB,EAAU,SAACnB,EAAKE,EAAKJ,GAAX,OAA+C,IAA1BA,EAAME,GAAKE,GAAKhC,OACxC2C,EAAS,SAACb,EAAKE,EAAKJ,GAAX,OAAqBA,EAAME,GAAKE,GAAKpB,WAE9Ca,EAAS,SAACK,EAAKE,EAAKJ,GAAX,OAAqBA,EAAME,GAAKE,GAAKP,QCpG5CyB,EA9BA,SAAC,GAA4B,IAA1BlD,EAAyB,EAAzBA,MAAOmD,EAAkB,EAAlBA,YAmBvB,OACE,yBACErD,UAAU,WACVgB,MAAO,CAAEC,MAAM,GAAD,OApBD,WACf,OAAOf,GACP,KAAK,EACH,MAAO,aACT,KAAK,EACH,MAAO,QACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,SACT,QACE,MAAO,SAOYoD,IAAcpC,gBAAiB,cAClDnB,QAASsD,GAEE,IAAVnD,EAAc,GAAKA,ICPXqD,EAhBE,SAAC,GAAiC,IAA/B/C,EAA8B,EAA9BA,KAAMgD,EAAwB,EAAxBA,kBAExB,OAAIhD,EAAKmB,OAEL,kBAAC,IAAD,MAKF,kBAAC,EAAD,CACEzB,MAAOM,EAAKN,MACZmD,YAAaG,KC6DJC,EAvED,SAAC,GAAiD,IAA/C3B,EAA8C,EAA9CA,MAAO4B,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAC3C,IAAK9B,EACH,OAAO,KAGT,IAAM+B,EAAW,SAAC7B,EAAKE,GACrB,IAAKwB,IAAWf,EAAgBX,EAAKE,EAAKJ,KAAWe,EAAOb,EAAKE,EAAKJ,GAAQ,CAC5E,GAAIH,EAAOK,EAAKE,EAAKJ,GAGnB,OAFAA,EAAME,GAAKE,GAAKR,QAAS,OACzBiC,KH4DyB,SAApBG,EAAqB9B,EAAKE,EAAKJ,GACtCa,EAAgBX,EAAKE,EAAKJ,IAAUA,EAAME,GAAKE,GAAKR,QAAUC,EAAOK,EAAKE,EAAKJ,KAInFA,EAAME,GAAKE,GAAKR,QAAS,EAErByB,EAAQnB,EAAKE,EAAKJ,KACpBgC,EAAkB9B,EAAM,EAAGE,EAAM,EAAGJ,GACpCgC,EAAkB9B,EAAM,EAAGE,EAAM,EAAGJ,GACpCgC,EAAkB9B,EAAM,EAAGE,EAAM,EAAGJ,GACpCgC,EAAkB9B,EAAM,EAAGE,EAAM,EAAGJ,GAEpCgC,EAAkB9B,EAAKE,EAAM,EAAGJ,GAChCgC,EAAkB9B,EAAM,EAAGE,EAAKJ,GAChCgC,EAAkB9B,EAAKE,EAAM,EAAGJ,GAChCgC,EAAkB9B,EAAM,EAAGE,EAAKJ,KGxE9BgC,CAAkB9B,EAAKE,EAAKJ,GAC5B8B,EAAY9B,KAIV0B,EAAoB,SAACxB,EAAKE,IHiCJ,SAACM,EAAGC,EAAGX,GAGnC,IAFA,IAAIiC,EAAQ,EAEH/B,EAAMQ,EAAI,EAAGR,GAAOQ,EAAI,EAAGR,IAClC,IAAK,IAAIE,EAAMO,EAAI,EAAGP,GAAOO,EAAI,EAAGP,KAC7BS,EAAgBX,EAAKE,EAAKJ,IAAUe,EAAOb,EAAKE,EAAKJ,KACxDiC,GAAS,GAKf,OAAIA,EAAQjC,EAAMU,GAAGC,GAAGvC,OG3ClB8D,CAAehC,EAAKE,EAAKJ,MHsES,SAACE,EAAKE,EAAKJ,GACnD,IAAK,IAAIU,EAAIR,EAAM,EAAGQ,GAAKR,EAAM,EAAGQ,IAClC,IAAK,IAAIC,EAAIP,EAAM,EAAGO,GAAKP,EAAM,EAAGO,IAClC,GAAIG,EAAkBJ,EAAGC,EAAGX,GAC1B,OAAO,EAKb,OAAO,EG3EDmC,CAA2BjC,EAAKE,EAAKJ,GAKzC8B,EAAY9B,GAJV6B,MAcEO,EAAY,CAChBC,QAAS,OACTC,oBAAoB,UAAD,OAAYtC,EAAM,GAAGN,OAArB,aACnB6C,iBAAiB,UAAD,OAAYvC,EAAMN,OAAlB,aAChB8C,WAAY,SACZC,UAAW,SACXC,aAAc,SACdC,eAAgB,UAGlB,OACE,yBAAKzD,MAAOkD,GACTpC,EAAM4C,KAAI,SAAC1C,EAAKQ,GAAN,OACTR,EAAI0C,KAAI,SAAClE,EAAMiC,GAAP,OACNjC,EAAKkB,OACH,kBAAC,EAAD,CACEiD,IAAKlC,EACLjC,KAAMA,EACNgD,kBAAmB,kBAAMA,EAAkBhB,EAAGC,MAGhD,kBAAC,EAAD,CACEkC,IAAKlC,EACLjC,KAAMA,EACNC,KAAM,kBAAMoD,EAASrB,EAAGC,IACxB/B,WAAY,kBAhCL,SAACsB,EAAKE,GAClBwB,KH8FiB,SAAC1B,EAAKE,EAAKJ,GAAUA,EAAME,GAAKE,GAAKpB,WAAagB,EAAME,GAAKE,GAAKpB,UG7FtFJ,CAAWsB,EAAKE,EAAKJ,GACrB8B,EAAY9B,IA6BcnB,CAAW6B,EAAGC,cC9B/BmC,EAjCF,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,KAAMC,EAAoD,EAApDA,QAASC,EAA2C,EAA3CA,YAAcC,EAA6B,EAA7BA,uBAC3C,IAAKH,EACH,OAAO,KAGT,IAKMI,EAAoB,SAAAnD,GACxBgD,EAAQ,eAAKD,EAAN,CAAY/C,QAAOoD,MAAM,KJyGf,SAAAL,GACnB,OAAO,IAAMA,EAAK/C,MAAMqD,OAAOrC,EAAc,GIxGvCsC,CAAMP,KACRG,EAAuB,YAAY,GACnCD,MAIJ,OACE,kBAACM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CACExD,MAAO+C,EAAK/C,MACZ6B,YAnBkB,WACxBmB,EAAQ,eAAKD,EAAN,CAAYnB,QAAQ,EAAMwB,MAAM,KACvCF,EAAuB,iBAAiB,IAkBlCpB,YAAa,SAAC2B,GAAD,OAAON,EAAkBM,IACtC7B,OAAQmB,EAAKnB,Y,iBCjBR,GACb8B,QAXW,uCAAG,4BAAAC,EAAA,sEACIC,IAAMC,IAAN,UAHH,aAED,cACRC,EADQ,yBAEPA,EAAIC,MAFG,2CAAH,qDAYXC,OAPU,uCAAG,WAAMC,GAAN,eAAAN,EAAA,sEACKC,IAAMM,KAAN,UARH,YAQ6BD,GAD/B,cACPH,EADO,yBAENA,EAAIC,MAFE,2CAAH,uD,wBCkCGI,EAxCI,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAAY,EACbC,mBAAS,GADI,mBACpCC,EADoC,KAC3BC,EAD2B,KAOrCC,EAAcL,EAAUM,MAFf,SAACf,EAAGF,GAAJ,OAAUE,EAAEgB,KAAOlB,EAAEkB,KAAO,EAAI,GAAK,KAETC,MAAM,EAAGL,GAEpD,OACE,kBAACM,EAAA,EAAD,CAAM3G,UAAU,aACd,kBAAC2G,EAAA,EAAKC,OAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,CAAY7G,UAAU,eACnBmG,IAGL,kBAACQ,EAAA,EAAKG,KAAN,KACwB,IAArBZ,EAAU1E,OACP,iBAEF,kBAACuF,EAAA,EAAD,CAAWC,QAAQ,SAChBT,EAAY7B,KAAI,SAAAuC,GAAI,OACnB,kBAACF,EAAA,EAAUzG,KAAX,CAAgBqE,IAAKsC,EAAKC,IACvBD,EAAKE,SADR,IACkB,kBAACC,EAAA,EAAD,CAAOJ,QAAQ,UAAUhH,UAAU,eAAeiH,EAAKR,UAI1EJ,EAAUH,EAAU1E,QACrB,kBAACuF,EAAA,EAAUzG,KAAX,CAAgB+G,QAAM,EAACtH,QAzBR,kBAAMuG,EAAWD,EAAU,KAyB1C,iBCRGiB,EApBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAChB,oCACE,wBAAIvH,UAAU,eAAd,gBAEA,kBAAC,EAAD,CACEmG,MAAM,OACND,UAAWqB,EAAQtE,QAAO,SAAAuE,GAAC,MAAqB,SAAjBA,EAAEC,gBAGnC,kBAAC,EAAD,CACEtB,MAAM,SACND,UAAWqB,EAAQtE,QAAO,SAAAuE,GAAC,MAAqB,WAAjBA,EAAEC,gBAGnC,kBAAC,EAAD,CACEtB,MAAM,OACND,UAAWqB,EAAQtE,QAAO,SAAAuE,GAAC,MAAqB,SAAjBA,EAAEC,kB,QCLxBC,EAZD,SAAC,GAAuB,IAArBjB,EAAoB,EAApBA,KAAMkB,EAAc,EAAdA,QAOrB,OALAC,qBAAU,WACR,IAAMC,EAAQC,aAAY,kBAAMH,EAAQlB,EAAO,KAAI,KACnD,OAAO,kBAAMsB,cAAcF,MAC1B,CAACpB,IAGF,oCAAGA,IC0BQuB,EAhCK,SAAC,GAAmD,IAAjDnD,EAAgD,EAAhDA,KAAMoD,EAA0C,EAA1CA,qBAAsBxB,EAAoB,EAApBA,KAAMkB,EAAc,EAAdA,QAUvD,OACE,kBAACtC,EAAA,EAAD,CAAKrF,UAAU,+BACb,kBAACsF,EAAA,EAAD,CAAK4C,GAAI,GAAIC,GAAI,GACf,kBAACC,EAAA,EAAD,CACEpI,UAAU,YACVqI,YAAY,gBACZC,SAAUL,IAGZ,uBAAGjI,UAAU,cAAb,UACU6E,EAAOA,EAAKhD,MAAQ,GAG9B,uBAAG7B,UAAU,eAAb,YArBwB6E,GAAQA,EAAKK,KAEzC,kBAAC,EAAD,CACEuB,KAAMA,EACNkB,QAASA,IAETlB,MCKS8B,EAdM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACtB,OAAKA,EAAaC,QAKhB,kBAACpD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKtF,UAAU,eAAegB,MAAO,CAAEE,gBAAiBsH,EAAaE,QAAU,MAAQ,UACrF,4BAAKF,EAAaC,WANf,MC2HIE,G,MApHH,WAAO,IAAD,EACwBvC,mBAAS,CAAEqC,QAAS,GAAIC,SAAS,IADzD,mBACTF,EADS,KACKI,EADL,OAEQxC,mBAAS,MAFjB,mBAETvB,EAFS,KAEHC,EAFG,OAGgBsB,mBAAS,IAHzB,mBAGTe,EAHS,KAGC0B,EAHD,OAIQzC,mBAAS,GAJjB,mBAITK,EAJS,KAIHkB,EAJG,OAKcvB,mBAAS,IALvB,mBAKTmB,EALS,KAKAuB,EALA,KAOhBlB,qBAAU,WACRmB,MACC,IAEH,IAAM/D,EAAyB,SAACyD,EAASC,GACvCE,EAAgB,CAAEH,UAASC,YAE3BM,YAAW,WACTJ,EAAgB,CAAEH,QAAS,GAAIC,SAAS,MACvC,MAGCK,EAAiB,uCAAG,4BAAAtD,EAAA,+EAEJwD,EAAQzD,UAFJ,OAEhBI,EAFgB,OAGtBkD,EAAWlD,GAHW,gDAKtBsD,QAAQC,IAAR,MACAnE,EAAuB,8CAA8C,GAN/C,yDAAH,qDAUjB5E,EAAmB,SAACgB,EAAMC,EAAMQ,EAAO4F,GAC3C,IAEM2B,EAAU,CACdtH,MX5CuB,SAACV,EAAMC,EAAMQ,GACxC,IAAMwH,EAAWlI,EAAgBC,EAAMC,GAEvC,OADAO,EAAgBR,EAAMC,EAAMQ,EAAOwH,GAC5BA,EWsCSC,CAAclI,EAAMC,EAAMQ,GAItCA,QACA4F,aACA/D,QAAQ,EACR0B,OAAO,EACPF,MAAM,GAGRyC,EAAQ,GACR7C,EAAQsE,IAaJG,EAAU,uCAAG,8BAAA9D,EAAA,6DACXM,EAAS,CACboB,SAAuB,KAAbA,EAAkB,YAAcA,EAC1CM,WAAY5C,EAAK4C,WACjBhB,QAJe,kBAQWwC,EAAQnD,OAAOC,GAR1B,OAQTyD,EARS,OASfV,EAAWvB,EAAQkC,OAAOD,IATX,gDAYfN,QAAQC,IAAR,MACAnE,EAAuB,2CAA2C,GAbnD,yDAAH,qDAiBV0E,EAAgB,SAAA7E,GAAI,OAAIC,EAAQD,IAChC8E,EAAgB,SAAAlD,GAAI,OAAIkB,EAAQlB,IAGtC,OACE,kBAACmD,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACxE,EAAA,EAAD,CAAKrF,UAAU,UACb,kBAACsF,EAAA,EAAD,KACE,wBAAItF,UAAU,eAAd,iBAGJ,kBAAC,EAAD,CACEwI,aAAcA,IAEhB,kBAACnD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK4C,GAAI,GAAIC,GAAI,GACf,kBAAC,EAAD,CACEZ,QAASA,KAGb,kBAACjC,EAAA,EAAD,CAAK4C,GAAI,GAAIC,GAAI,GACf,kBAAC,EAAD,CACE/H,iBAAkB,SAACgB,EAAMC,EAAMQ,EAAO4F,GAApB,OAChBrH,EAAiBgB,EAAMC,EAAMQ,EAAO4F,MAGxC,kBAAC,EAAD,CACE5C,KAAMA,EACN4B,KAAMA,EACNkB,QAAS,SAAClB,GAAD,OAAUkD,EAAclD,IACjCwB,qBA5BmB,SAAArH,GAAK,OAAIiI,EAAYjI,EAAMkJ,OAAO5J,UA8BvD,kBAAC,EAAD,CACE2E,KAAMA,EACNC,QAAS,SAACD,GAAD,OAAU6E,EAAc7E,IACjCE,YA9DU,WAClBD,EAAQ,eAAKD,EAAN,CAAYO,OAAO,EAAMF,MAAM,KAEtC,IAAM6E,EAAWxC,EAAQ7C,KAAI,SAAAqB,GAAM,OAAIA,EAAOU,QAAMtB,QAAO,SAACM,EAAGF,GAAJ,OAAUlD,KAAK2H,IAAIvE,EAAGF,MAE7EkB,EAAOsD,GACTR,KAyDMvE,uBAAwBA,S,MClHpCiF,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a8af23b9.chunk.js","sourcesContent":["import React from 'react'\n\nconst Button = ({ text, onClick }) => {\n  return (\n    <input\n      className='button m-1'\n      type='button'\n      value={text}\n      onClick={onClick}\n    />\n  )\n}\n\nexport default Button","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport Button from './Button'\n\nconst OptionsPanel = ({ handleCreateGame }) =>\n  <Nav className='justify-content-center'>\n    <Nav.Item>\n      <Button\n        text='Easy 9x9'\n        onClick={() => handleCreateGame(9, 9, 10, 'easy')}\n      />\n    </Nav.Item>\n    <Nav.Item>\n      <Button\n        text='Medium 16x16'\n        onClick={() => handleCreateGame(16, 16, 40, 'medium')}\n      />\n    </Nav.Item>\n    <Nav.Item>\n      <Button\n        text='Hard 16x30'\n        onClick={() => handleCreateGame(16, 30, 99, 'hard')}\n      />\n    </Nav.Item>\n  </Nav>\n\nexport default OptionsPanel","import React from 'react'\nimport { FaFlag } from 'react-icons/fa'\n\nconst ClosedTile = ({ tile, open, toggleFlag }) => {\n\n  const handleFlag = (event) => {\n    event.preventDefault()\n    toggleFlag()\n  }\n\n  if (tile.isFlagged) {\n    return (\n      <FaFlag\n        className='gridItem'\n        onContextMenu={handleFlag}\n        style={{ color: 'red', backgroundColor: 'grey' }}\n      />\n    )\n  }\n\n  return (\n    <div\n      className='gridItem'\n      onClick={open}\n      onContextMenu={handleFlag}\n    >\n    </div>\n  )\n}\n\nexport default ClosedTile","\nexport const createBoardOf = (rows, cols, mines) => {\n  const newBoard = initializeArray(rows, cols)\n  initializeMines(rows, cols, mines, newBoard)\n  return newBoard\n}\n\nconst initializeArray = (rows, cols) =>\n  Array.from({ length: rows },\n    () => Array.from({ length: cols },\n      () =>  initialTile() ))\n\nconst initialTile = () => {\n  return {\n    value: 0,\n    isOpen: false,\n    isFlagged: false,\n    isMine: false\n  }\n}\n\nconst initializeMines = (rows, cols, mines, board) => {\n  let minesLeft = mines\n\n  while (minesLeft > 0) {\n    let row = generateIndex(rows)\n    let col = generateIndex(cols)\n\n    if (!isMine(row, col, board)) {\n      board[row][col].isMine = true\n      updateAdjacentMinesCount(row, col, board)\n      minesLeft -= 1\n    }\n  }\n}\n\nconst generateIndex = index => Math.floor(Math.random() * index)\n\nconst updateAdjacentMinesCount = (i, j, board) => {\n  incrementValueIfNotOutOfBounds(i - 1, j - 1, board)\n  incrementValueIfNotOutOfBounds(i + 1, j + 1, board)\n  incrementValueIfNotOutOfBounds(i - 1, j + 1, board)\n  incrementValueIfNotOutOfBounds(i + 1, j - 1, board)\n\n  incrementValueIfNotOutOfBounds(i - 1, j, board)\n  incrementValueIfNotOutOfBounds(i + 1, j, board)\n  incrementValueIfNotOutOfBounds(i, j - 1, board)\n  incrementValueIfNotOutOfBounds(i, j + 1, board)\n}\n\nconst incrementValueIfNotOutOfBounds = (row, col, board) => {\n  if (!indexOutOfRange(row, col, board)) {\n    board[row][col].value += 1\n  }\n}\n\nexport const notEnoughFlags = (i, j, board) => {\n  let flags = 0\n\n  for (let row = i - 1; row <= i + 1; row++) {\n    for (let col = j - 1; col <= j + 1; col++) {\n      if (!indexOutOfRange(row, col, board) && isFlag(row, col, board)) {\n        flags += 1\n      }\n    }\n  }\n\n  if (flags < board[i][j].value) {\n    return true\n  }\n\n  return false\n}\n\nexport const cascadeEmptyTiles = (row, col, board) => {\n  if (indexOutOfRange(row, col, board) || board[row][col].isOpen || isMine(row, col, board)) {\n    return\n  }\n\n  board[row][col].isOpen = true\n\n  if (isEmpty(row, col, board)) {\n    cascadeEmptyTiles(row - 1, col - 1, board)\n    cascadeEmptyTiles(row + 1, col + 1, board)\n    cascadeEmptyTiles(row - 1, col + 1, board)\n    cascadeEmptyTiles(row + 1, col - 1, board)\n\n    cascadeEmptyTiles(row, col - 1, board)\n    cascadeEmptyTiles(row - 1, col, board)\n    cascadeEmptyTiles(row, col + 1, board)\n    cascadeEmptyTiles(row + 1, col, board)\n  }\n}\n\nexport const openAdjacentTilesAndIsMine = (row, col, board) => {\n  for (let i = row - 1; i <= row + 1; i++) {\n    for (let j = col - 1; j <= col + 1; j++) {\n      if (openTileAndIsMine(i, j, board)) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n\nconst openTileAndIsMine = (row, col, board) => {\n  if (!indexOutOfRange(row, col, board) && !isFlag(row, col, board)) {\n\n    board[row][col].isOpen = true\n\n    if (isMine(row, col, board)) {\n      return true\n    }\n  }\n  return false\n}\n\nexport const indexOutOfRange = (row, col, board) =>\n  row < 0 || col < 0 || row > board.length-1 || col > board[0].length-1\n\nexport const isWon = game => {\n  return 0 === game.board.reduce(boardReducer, 0)\n}\n\nconst boardReducer = (sum, currentRow) => sum + currentRow.filter(isClosedNonMinedTile).length\n\nconst isClosedNonMinedTile = tile => !tile.isOpen && !tile.isMine\n\nconst isEmpty = (row, col, board) => board[row][col].value === 0\nexport const isFlag = (row, col, board) => board[row][col].isFlagged\nexport const toggleFlag = (row, col, board) => board[row][col].isFlagged = !board[row][col].isFlagged\nexport const isMine = (row, col, board) => board[row][col].isMine\n","import React from 'react'\n\nconst Number = ({ value, handleClick }) => {\n\n  const setColor = () => {\n    switch(value) {\n    case 0:\n      return 'whitesmoke'\n    case 1:\n      return 'green'\n    case 2:\n      return 'orange'\n    case 3:\n      return 'red'\n    case 4:\n      return 'purple'\n    default:\n      return 'black'\n    }\n  }\n\n  return (\n    <div\n      className='gridItem'\n      style={{ color: `${setColor()}`, backgroundColor: 'whitesmoke' }}\n      onClick={handleClick}\n    >\n      {value === 0 ? '' : value}\n    </div>\n  )\n}\n\nexport default Number","import React from 'react'\nimport { FaBomb } from 'react-icons/fa'\nimport Number from './Number'\n\nconst OpenTile = ({ tile, openAdjacentTiles }) => {\n\n  if (tile.isMine) {\n    return (\n      <FaBomb />\n    )\n  }\n\n  return (\n    <Number\n      value={tile.value}\n      handleClick={openAdjacentTiles}\n    />\n  )\n}\n\nexport default OpenTile","import React from 'react'\nimport ClosedTile from './ClosedTile'\nimport { cascadeEmptyTiles, indexOutOfRange, openAdjacentTilesAndIsMine, isFlag, isMine, toggleFlag, notEnoughFlags } from '../utils/minesweeperUtils'\nimport OpenTile from './OpenTile'\n\nconst Board = ({ board, isOver, setGameOver, updateBoard }) => {\n  if (!board) {\n    return null\n  }\n\n  const openTile = (row, col) => {\n    if (!isOver && !indexOutOfRange(row, col, board) && !isFlag(row, col, board)) {\n      if (isMine(row, col, board) ) {\n        board[row][col].isOpen = true\n        setGameOver()\n        return\n      }\n\n      cascadeEmptyTiles(row, col, board)\n      updateBoard(board)\n    }\n  }\n\n  const openAdjacentTiles = (row, col) => {\n    if (notEnoughFlags(row, col, board)) {\n      return\n    }\n\n    if (openAdjacentTilesAndIsMine(row, col, board)) {\n      setGameOver()\n      return\n    }\n\n    updateBoard(board)\n  }\n\n  const handleFlag = (row, col) => {\n    if (!isOver) {\n      toggleFlag(row, col, board)\n      updateBoard(board)\n    }\n  }\n\n  const gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: `repeat(${board[0].length}, 1.5rem)`,\n    gridTemplateRows: `repeat(${board.length}, 1.5rem)`,\n    alignItems: 'center',\n    textAlign: 'center',\n    justifyItems: 'center',\n    justifyContent: 'center'\n  }\n\n  return (\n    <div style={gridStyle} >\n      {board.map((row, i) =>\n        row.map((tile, j) =>\n          tile.isOpen ?\n            <OpenTile\n              key={j}\n              tile={tile}\n              openAdjacentTiles={() => openAdjacentTiles(i, j)}\n            />\n            :\n            <ClosedTile\n              key={j}\n              tile={tile}\n              open={() => openTile(i, j)}\n              toggleFlag={() => handleFlag(i, j)}\n            />\n        )\n      )}\n    </div>\n  )\n}\n\nexport default Board","import React from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport Board from './Board'\nimport { isWon } from '../utils/minesweeperUtils'\n\nconst Game = ({ game, setGame, handleIsWon , handleShowNotification }) => {\n  if (!game) {\n    return null\n  }\n\n  const handleSetGameOver = () => {\n    setGame({ ...game, isOver: true, isOn: false })\n    handleShowNotification('Death by mine', true)\n  }\n\n  const handleUpdateBoard = board => {\n    setGame({ ...game, board, isOn: true })\n\n    if (isWon(game)) {\n      handleShowNotification('You won!', false)\n      handleIsWon()\n    }\n  }\n\n  return (\n    <Row>\n      <Col>\n        <Board\n          board={game.board}\n          setGameOver={handleSetGameOver}\n          updateBoard={(b) => handleUpdateBoard(b)}\n          isOver={game.isOver}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Game","import axios from 'axios'\n\nconst basePath = '/results'\n\nconst findAll = async () => {\n  const res = await axios.get(`${basePath}`)\n  return res.data\n}\n\nconst create = async result => {\n  const res = await axios.post(`${basePath}`, result)\n  return res.data\n}\n\nexport default {\n  findAll,\n  create\n}","import React, { useState } from 'react'\nimport { ListGroup, Card, Badge } from 'react-bootstrap'\n\nconst ResultList = ({ listItems, title }) => {\n  const [visible, setVisible] = useState(5)\n\n  const handleSetVisible = () => setVisible(visible + 5)\n\n  const byTime = (a, b) => a.time - b.time > 0 ? 1 : -1\n\n  const itemsToShow = listItems.sort(byTime).slice(0, visible)\n\n  return (\n    <Card className='mb-2 mt-2'>\n      <Card.Header>\n        <Card.Title className='text-center'>\n          {title}\n        </Card.Title>\n      </Card.Header>\n      <Card.Body>\n        {listItems.length === 0\n          ? 'no results yet'\n          :\n          <ListGroup variant='flush'>\n            {itemsToShow.map(item =>\n              <ListGroup.Item key={item.id}>\n                {item.nickname} <Badge variant='warning' className='float-right'>{item.time}</Badge>\n              </ListGroup.Item>\n            )}\n\n            {visible < listItems.length &&\n            <ListGroup.Item action onClick={handleSetVisible}>\n              Show more\n            </ListGroup.Item>\n            }\n          </ListGroup>\n        }\n      </Card.Body>\n    </Card>\n  )\n}\n\n\nexport default ResultList","import React from 'react'\nimport ResultList from './ResultList'\n\nconst SidePanel = ({ results }) =>\n  <>\n    <h3 className='text-center'>Best Results</h3>\n\n    <ResultList\n      title='Easy'\n      listItems={results.filter(r => r.difficulty === 'easy')}\n    />\n\n    <ResultList\n      title='Medium'\n      listItems={results.filter(r => r.difficulty === 'medium')}\n    />\n\n    <ResultList\n      title='Hard'\n      listItems={results.filter(r => r.difficulty === 'hard')}\n    />\n  </>\n\nexport default SidePanel","import React, { useEffect } from 'react'\n\nconst Timer = ({ time, setTime }) => {\n\n  useEffect(() => {\n    const timer = setInterval(() => setTime(time + 1), 1000)\n    return () => clearInterval(timer)\n  }, [time])\n\n  return (\n    <>{time}</>\n  )\n}\n\nexport default Timer\n","import React from 'react'\nimport { Row, Col, FormControl } from 'react-bootstrap'\nimport Timer from './Timer'\n\nconst GameInfoBar = ({ game, handleNicknameChange, time, setTime }) => {\n\n  const handleShowTimer = () => game && game.isOn\n    ?\n    <Timer\n      time={time}\n      setTime={setTime}\n    />\n    : time\n\n  return (\n    <Row className='justify-content-center mt-3'>\n      <Col xs={12} sm={4} >\n        <FormControl\n          className='mb-2 mt-2'\n          placeholder='Your nickname'\n          onChange={handleNicknameChange}\n        />\n\n        <p className='float-left'>\n          Mines: {game ? game.mines : 0}\n        </p>\n\n        <p className='float-right'>\n          Seconds: {handleShowTimer()}\n        </p>\n\n      </Col>\n    </Row>\n  )\n}\n\nexport default GameInfoBar\n","import React from 'react'\nimport { Row, Col } from 'react-bootstrap'\n\nconst Notification = ({ notification }) => {\n  if (!notification.message) {\n    return null\n  }\n\n  return (\n    <Row>\n      <Col className='notification' style={{ backgroundColor: notification.isError ? 'red' : 'green' }}>\n        <h2>{notification.message}</h2>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport OptionsPanel from './components/OptionsPanel'\nimport Game from './components/Game'\nimport { createBoardOf } from './utils/minesweeperUtils'\nimport service from './services/minesweeperService'\nimport SidePanel from './components/SidePanel'\nimport GameInfoBar from './components/GameInfoBar'\nimport Notification from './components/Notification'\n\nimport './App.css'\n\nconst App = () => {\n  const [notification, setNotification] = useState({ message: '', isError: false })\n  const [game, setGame] = useState(null)\n  const [nickname, setNickname] = useState('')\n  const [time, setTime] = useState(0)\n  const [results, setResults] = useState([])\n\n  useEffect(() => {\n    handleFindResults()\n  }, [])\n\n  const handleShowNotification = (message, isError) => {\n    setNotification({ message, isError })\n\n    setTimeout(() => {\n      setNotification({ message: '', isError: false })\n    }, 3000)\n  }\n\n  const handleFindResults = async () => {\n    try {\n      const res = await service.findAll()\n      setResults(res)\n    } catch (exception) {\n      console.log(exception)\n      handleShowNotification('Error when Fetching results, is server up?', true)\n    }\n  }\n\n  const handleCreateGame = (rows, cols, mines, difficulty) => {\n    const board = createBoardOf(rows, cols, mines)\n\n    const newGame = {\n      board,\n      mines,\n      difficulty,\n      isOver: false,\n      isWon: false,\n      isOn: false\n    }\n\n    setTime(0)\n    setGame(newGame)\n  }\n\n  const handleIsWon = () => {\n    setGame({ ...game, isWon: true, isOn: false })\n\n    const bestTime = results.map(result => result.time).reduce((a, b) => Math.min(a, b))\n\n    if (time < bestTime) {\n      saveResult()\n    }\n  }\n\n  const saveResult = async () => {\n    const result = {\n      nickname: nickname === '' ? 'Anonymous' : nickname,\n      difficulty: game.difficulty,\n      time\n    }\n\n    try {\n      const savedResult = await service.create(result)\n      setResults(results.concat(savedResult))\n\n    } catch (exception) {\n      console.log(exception)\n      handleShowNotification('Error when saving result, is server up?', true)\n    }\n  }\n\n  const handleSetGame = game => setGame(game)\n  const handleSetTime = time => setTime(time)\n  const handleNicknameChange = event => setNickname(event.target.value)\n\n  return (\n    <Container fluid>\n      <Row className='banner'>\n        <Col>\n          <h1 className='text-center'>Minesweeper</h1>\n        </Col>\n      </Row>\n      <Notification\n        notification={notification}\n      />\n      <Row>\n        <Col xs={12} sm={3} >\n          <SidePanel\n            results={results}\n          />\n        </Col>\n        <Col xs={12} sm={9} >\n          <OptionsPanel\n            handleCreateGame={(rows, cols, mines, difficulty) =>\n              handleCreateGame(rows, cols, mines, difficulty)\n            }\n          />\n          <GameInfoBar\n            game={game}\n            time={time}\n            setTime={(time) => handleSetTime(time)}\n            handleNicknameChange={handleNicknameChange}\n          />\n          <Game\n            game={game}\n            setGame={(game) => handleSetGame(game)}\n            handleIsWon={handleIsWon}\n            handleShowNotification={handleShowNotification}\n          />\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}